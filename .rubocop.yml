# The behavior of RuboCop can be controlled via the .rubocop.yml
# configuration file. It makes it possible to enable/disable
# certain cops (checks) and to alter their behavior if they accept
# any parameters. The file can be placed either in your home
# directory or in some project directory.
#
# RuboCop will start looking for the configuration file in the directory
# where the inspected file is and continue its way up to the root directory.
#
# See https://docs.rubocop.org/rubocop/configuration

require:
  - rubocop-rails

inherit_mode:
  merge:
    - Exclude

AllCops:
  NewCops: enable 
  TargetRubyVersion: 2.7.1
  Exclude:
    - 'app/jobs/*'
    - 'bin/**/*'
    - 'vendor/**/*'
    - 'db/**/*'
    - 'script/**/*'
    - 'node_modules/**/*'
    - 'config/spring.rb'
    - 'config/puma.rb'
    - 'config/initializers/*'
    - 'config/environments/*'
    - 'config/application.rb'
    - 'spec/features/*'
    - 'test/*'
    - 'test/channels/application_cable/connection_test.rb'
    - 'Rakefile'
    - 'Gemfile'
    - 'spec/spec_helper.rb'
    - 'spec/rails_helper.rb'
    - 'spec/factories/social_distances.rb'
    - 'app/models/country.rb'
    - 'spec/factories/self_tests.rb'
    - 'spec/requests/user_create_social_distances_spec.rb'

Style/ClassAndModuleChildren:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/EmptyMethod:
  Enabled: false

Style/FrozenStringLiteralComment:
  Enabled: false

Style/MultilineIfModifier:
  Enabled: false

Layout/ArgumentAlignment:
  Enabled: false

Metrics/BlockLength:
  ExcludedMethods: ['describe', 'context', 'feature', 'scenario', 'let']
  Enabled: true

Layout/LineLength:
  Max: 80
  Enabled: true

Style/AsciiComments:
  Enabled: false

##

Layout/SpaceAroundMethodCallOperator:
  Enabled: true
  
Lint/RaiseException:
  Enabled: true
  
Lint/StructNewOverride:
  Enabled: true
  
Style/ExponentialNotation:
  Enabled: true
  
Style/HashEachMethods:
  Enabled: true
  
Style/HashTransformKeys:
  Enabled: true
  
Style/HashTransformValues:
  Enabled: true